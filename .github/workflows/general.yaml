name: general

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version-file: package.json
      - name: Install Dependencies
        run: pnpm ci:install
      - name: Build Packages
        run: pnpm build
      - name: Compile Binaries
        run: pnpm compile
      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dpkit/compile/build/*.zip

  test-linux:
    needs: [compile]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version-file: package.json
      - name: Install Dependencies
        run: pnpm ci:install
      - name: Build Packages
        run: pnpm build
      - name: Test Packages
        run: pnpm test
        env:
          DPKIT_MYSQL_URL: mysql://test:test@localhost:3306/test
          DPKIT_POSTGRESQL_URL: postgresql://test:test@localhost:5432/test
      - name: Upload Coverage
        uses: codecov/codecov-action@v5
        with:
          slug: datisthq/dpkit
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Download Binaries
        uses: actions/download-artifact@v5
        with:
          name: build
          path: dpkit/compile/build
      - name: Test Binaries
        run: unzip -j dpkit/compile/build/*linux.zip "dp*" && ./dp --version

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
        ports:
          - 3306:3306

  test-macos:
    needs: [compile]
    runs-on: macos-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version-file: package.json
      - name: Install Dependencies
        run: pnpm ci:install
      - name: Build Packages
        run: pnpm build
      - name: Test Packages
        run: pnpm test
      - name: Download Binaries
        uses: actions/download-artifact@v5
        with:
          name: build
          path: dpkit/compile/build
      # - name: Test Binaries
      #   run: unzip -j dpkit/compile/build/*darwin.zip "dp*" && ./dp --version

  test-windows:
    needs: [compile]
    runs-on: macos-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version-file: package.json
      - name: Install Dependencies
        run: pnpm ci:install
      - name: Build Packages
        run: pnpm build
      - name: Test Packages
        run: pnpm test
      - name: Download Binaries
        uses: actions/download-artifact@v5
        with:
          name: build
          path: dpkit/compile/build
      # - name: Test Binaries
      #   run: unzip -j dpkit/compile/build/*windows.zip "dp*" && ./dp.exe --version

  release:
    # needs: [test-linux, test-macos, test-windows]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version-file: package.json
      - name: Install Dependencies
        run: pnpm ci:install
      - name: Build Packages
        run: pnpm build
      - name: Make Release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm semantic-release
